name: Lint and Format Code

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Specify the Node.js version you are using

    - name: Install dependencies
      run: npm install

    - name: Run Prettier
      run: npx prettier --check .

    - name: Run ESLint
      run: npx eslint .

    - name: Comment on PR if linting or formatting fails
      if: failure()
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { context } = require('@actions/github');
          const { owner, repo, number: issue_number } = context.issue;
          const failures = context.payload.pull_request.title.includes('format') ? 'formatting' : 'linting';
          const comment = `### :x: ${failures.charAt(0).toUpperCase() + failures.slice(1)} check failed
Please fix the issues and update the pull request.`;

          await github.issues.createComment({
            owner,
            repo,
            issue_number,
            body: comment,
          });

    - name: Annotate the PR with errors
      if: failure()
      uses: dorny/paths-filter@v2
      with:
        filters: |
          js:
            - '**/*.js'
      id: filter

    - name: Annotate changed JavaScript files
      if: failure() && steps.filter.outputs.js_changed == 'true'
      uses: docker://ghcr.io/github/super-linter/super-linter:latest
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_JS: true
        JS_LINTER_RULES_PATH: .eslintrc.json
        LINTER_RULES_PATH: .prettierrc
        
